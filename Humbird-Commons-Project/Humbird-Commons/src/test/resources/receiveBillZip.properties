# project name
org.humbird.soa.component.esign.name=receiveBillZip

# success file suffix
org.humbird.soa.component.esign.success.ext=.ctr
# failed file suffix
org.humbird.soa.component.esign.failed.ext=.ctr

# nxml storage days in o2p file server
org.humbird.soa.component.esign.day=3

# scan npdf suffix
org.humbird.soa.component.esign.scan.suffix=.pdf
# scaned nxml suffix
org.humbird.soa.component.esign.scaned.suffix=.xml

# comments begin
# ftp/sftp protocol
# localhost ip
# 21 port
# /Users/david absolute path
# noop=true true[o]/false 保证不重复读
# recursive true/false[o] 扫描子目录
# delete true[o]/false 删除源文件
# username 用户名
# password 密码
# stepwise true/false[o] 是否遍历子目录
# fastExistsCheck true[o]/false 快速检查
# comments end

# scan uri
org.humbird.soa.component.esign.from.scan.dir.uri.{code}=sftp://app.o2p.telenor.ai:22/o2p/tdk_o2p/data01/fileserver/45/21/8000150001/BL-08-003?username=aio2p&password=aio2p@odc&noop=true&recursive=true&fastExistsCheck=true&stepwise=false&delete=true
# scaned uri
org.humbird.soa.component.esign.from.scaned.dir.uri.{code}=sftp://app.o2p.telenor.ai:22/o2p/tdk_o2p/data01/fileserver/45/1/8000540001/CRM-22-003-XML?username=o2pEsign&password=esign12#&noop=true&recursive=true&fastExistsCheck=true&stepwise=false&delete=true
# error uri
org.humbird.soa.component.esign.error.uri.{code}=sftp://app.o2p.telenor.ai:22/o2p/tdk_o2p/data01/fileserver/45/21/8000000002/CRM-22-004?username=o2pEsign&password=esign12#&noop=true&recursive=true&fastExistsCheck=true&stepwise=false&delete=true
# object uri
org.humbird.soa.component.esign.to.uri.{code}=sftp://app.o2p.telenor.ai:22/o2p/tdk_o2p/data01/fileserver/45/1/8000540001/CRM-22-003?username=o2pEsign&password=esign12#&noop=true&recursive=true&fastExistsCheck=true&stepwise=false&delete=true
# template directory
org.humbird.soa.component.esign.tmp.dir.{code}=/veris/o2p/aio2p/tempfile/

# comments begin
# storage mapping file time type
# e.g.: 1=MilliSecond 2=Seconds 3=Minutes 4=Hour 5=Day
# comments end
org.humbird.soa.component.esign.delete.mapping.type=3
# storage mapping file time
org.humbird.soa.component.esign.delete.mapping.date=15

# output ctr PatternLayout
org.humbird.soa.component.esign.output=org.humbird.soa.common.tools.TPatternLayout
# output file name split char
org.humbird.soa.component.esign.output.Type=_
# comments begin
# output file name expression
# e.g.: {const:TNOR} -> TNOR, {const:BILL} -> BILL, {date:yyyyMMdd} -> 20140918
# e.g.: {date:HHmmss} -> 112358, {rand:8} -> 03214891(e.g.: will print random 8 number)
# e.g.: Will output file name is: TNOR_BILL_20140918_112358_03214891.ctr
# comments end
org.humbird.soa.component.esign.output.Pattern={const:TNOR} {const:BILL} {date:yyyyMMdd} {date:HHmmss} {rand:8}

# split scan npdf file name and nxml scaned file name char: _
org.humbird.soa.component.esign.match.type=_
# comments begin
# match scan file and scaned file rule
# e.g.: name1=TNOR_BILL_20140918_112358_03214891.ctr,
# e.g.: name2=CNOR_CRM_20150922_112358_03214891.ctr,
# e.g.: name1[3] -> 112358, name1[4] -> 03214891
# e.g.: name2[3] -> 112358, name2[4] -> 03214891
# e.g.: name1[3]==name2[3] and name1[4]==name2[4], it's true.
# comments end
org.humbird.soa.component.esign.match={index:3} {index:4}

# comments begin
# nxml date index of file name
# e.g.: name=TNOR_CYCLE_C1_000000001683_0000000001683_P_PDAG_1_P_20121013_063301.pdf
# e.g.: name[9] -> 20121013
# comments end
org.humbird.soa.component.esign.nxml.date=9
# comments begin
# npdf date index of file name
# nxml date index of file name
# e.g.: name=TNOR_CYCLE_C1_000000001683_0000000001683_P_PDAG_1_P_20121013_063301.xml
# e.g.: name[9] -> 20121013
# comments end
org.humbird.soa.component.esign.npdf.date=9

# vaild ctr file module split
org.humbird.soa.component.esign.vaild.module.split={const:;}
# vaild ctr file module head
org.humbird.soa.component.esign.vaild.module.head={const:H} {date:yyyyMMdd}
# comments begin
# invaild ctr file module body
# {rand:npdf} -> fetch npdf file name
# e.g: TNOR_CYCLE_C1_000000001683_0000000001683_P_PDAG_1_P_20121013_063301.pdf
# comments end
org.humbird.soa.component.esign.vaild.module.body={const:B} {index:4} {index:3} {rand:npdf} {rand:nxml} {const:}
# invaild ctr file module tail
org.humbird.soa.component.esign.vaild.module.tail={const:T}

# invaild ctr file module split
org.humbird.soa.component.esign.invaild.module.split={const:;}
# invaild ctr file module head
org.humbird.soa.component.esign.invaild.module.head={const:M} {date:yyyyMMdd}
# invaild ctr file module body
org.humbird.soa.component.esign.invaild.module.body={const:B} {index:4} {index:3} {rand:npdf} {const:} {const:}
# invaild ctr file module tail
org.humbird.soa.component.esign.invaild.module.tail={const:T}